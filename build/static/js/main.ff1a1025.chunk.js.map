{"version":3,"sources":["history.js","firebase.js","secrets.js","actions/index.js","components/Header.jsx","components/calendar/Modal.jsx","components/calendar/Calendar.jsx","components/profile/Info.jsx","components/profile/SalaryLog.jsx","components/profile/Profile.jsx","Quotes.js","components/login/Login.jsx","components/admin/SalaryLogModal.jsx","components/admin/EmployeeEdit.jsx","components/admin/Admin.jsx","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/employeeReducer.js","reducers/employeesReducer.js","reducers/selectEmployeeReducer.js","reducers/modalReducer.js","reducers/salaryLogsReducer.js","index.js"],"names":["createBrowserHistory","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","auth","GoogleAuthProvider","login","uid","email","name","dispatch","a","async","collection","doc","get","then","res","exists","set","isAdmin","history","push","type","payload","logout","deselectEmployee","uploadFile","file","ref","put","catch","err","console","log","closeModal","openModal","parseSalaryLogs","docs","logs","forEach","data","Header","renderProfileOrCalendarIcon","props","element","to","style","color","className","Classes","MINIMAL","icon","text","window","gapi","auth2","getAuthInstance","signOut","undefined","this","backgroundColor","align","fontSize","fontFamily","onClick","React","Component","connect","state","employee","Modal","formatDate","date","getFullYear","getMonth","getDate","getNumOfDays","start","end","diffTime","Math","abs","ceil","onSubmit","formValues","dates","numOfDays","remainingDays","sendEvent","Date","getTime","scheduleVacation","alert","event","summary","client","calendar","events","insert","calendarId","resource","renderDateInput","formProps","parseDate","str","allowSingleDayRange","shortcuts","input","renderNumOfDays","vacationDate","canOutsideClickClose","canEscapeKeyClose","isOpen","onClose","title","handleSubmit","Field","component","selector","formValueSelector","isModalOpen","remainingVacationDays","disbatch","getState","update","reduxForm","form","Calendar","renderScheduleEvent","setState","showModal","key","src","frameBorder","scrolling","onLoad","hidden","Info","url","renderStartDate","startDate","seconds","renderEndDate","endDate","child","getDownloadURL","salary","totalVacationDays","href","SalaryLog","renderSalaryLog","length","map","timestamp","month","gross","taxes","transportation","notes","salaryLogs","Profile","navbarTabId","handleTabChange","fetchSalaryLogs","iconSize","id","onChange","selectedTabId","panel","panelClassName","Expander","orderBy","salarylogs","Login","quote","quotes","floor","random","onAuthChange","isSignedIn","currentUser","getBasicProfile","getEmail","split","getId","getName","fetchEmployee","onSignInClick","signIn","renderSpinner","isLoggedIn","intent","size","borderRadius","load","init","clientId","scope","discoveryDocs","listen","paddingTop","onSnapshot","SalaryLogModal","insertSalaryLog","reset","renderTextInput","label","popoverProps","onOpened","e","document","querySelector","addEventListener","stopImmediatePropagation","parse","v","Number","value","initialValues","now","salaryLog","where","selectedEmployee","add","EmployeeEdit","contract","onFileUploadChange","target","files","onUploadButtonClick","editEmployee","renderError","meta","maxDate","renderUploadContract","width","onInputChange","border","error","touched","Colors","RED3","elevation","Elevation","TWO","updatedEmployee","limit","enableReinitialize","Admin","sideMenuWidth","mainMargin","openSideMenu","closeSideMenu","renderEmployeeEdit","fetchAllEmployees","employees","selectEmployee","marginLeft","App","renderProfileRoute","path","exact","height","combineReducers","action","formReducer","ReactDom","render","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.ff1a1025.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nimport { firebaseConfig } from \"./secrets\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const storage = firebase.storage();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyD3BdRVu-Hp1WCdl0qEjXLjKN_6KyOpvP0\",\n  authDomain: \"nodogoro-charlie.firebaseapp.com\",\n  databaseURL: \"https://nodogoro-charlie.firebaseio.com\",\n  projectId: \"nodogoro-charlie\",\n  storageBucket: \"nodogoro-charlie.appspot.com\",\n  messagingSenderId: \"978494847774\",\n  appId: \"1:978494847774:web:b2b150bba1b7cba6dae70f\"\n};\n","import history from \"../history\";\nimport { db, storage } from \"../firebase\";\n\nexport const login = (uid, email, name) => async dispatch => {\n  await db\n    .collection(\"hrms-employees\")\n    .doc(uid)\n    .get()\n    .then(res => {\n      if (res.exists === false)\n        db.collection(\"hrms-employees\")\n          .doc(uid)\n          .set({\n            email,\n            name,\n            isAdmin: false\n          })\n          .then(res => {\n            history.push(\"/\");\n            dispatch({\n              type: \"LOGIN\",\n              payload: uid\n            });\n          });\n      else {\n        history.push(\"/\");\n        dispatch({\n          type: \"LOGIN\",\n          payload: uid\n        });\n      }\n    });\n};\n\nexport const logout = () => {\n  history.push(\"/login\");\n  return {\n    type: \"LOGOUT\"\n  };\n};\n\nexport const fetchEmployee = uid => async dispatch => {\n  return db\n    .collection(\"hrms-employees\")\n    .doc(uid)\n    .onSnapshot(\n      res => {\n        dispatch({\n          type: \"FETCH_EMPLOYEE\",\n          payload: res.data()\n        });\n      },\n      err => console.log(err)\n    );\n};\n\nexport const fetchSalaryLogs = () => async (dispatch, getState) => {\n  const res = await db\n    .collection(\"hrms-employees\")\n    .doc(getState().uid)\n    .collection(\"salary log\")\n    .orderBy(\"timestamp\", \"desc\")\n    .get();\n\n  const salarylogs = parseSalaryLogs(res.docs);\n  dispatch({\n    type: \"FETCH_SALARY_LOGS\",\n    payload: salarylogs\n  });\n};\n\nexport const scheduleVacation = remainingVacationDays => async (\n  disbatch,\n  getState\n) => {\n  await db\n    .collection(\"hrms-employees\")\n    .doc(getState().uid)\n    .update({ remainingVacationDays: remainingVacationDays });\n};\n\nexport const fetchAllEmployees = () => async dispatch => {\n  return db.collection(\"hrms-employees\").onSnapshot(res => {\n    let employees = [];\n    res.forEach(doc => {\n      employees.push(doc.data());\n    });\n    dispatch({\n      type: \"FETCH_ALL_EMPLOYEES\",\n      payload: employees\n    });\n  });\n};\n\nexport const selectEmployee = employee => {\n  return {\n    type: \"SELECT_EMPLOYEE\",\n    payload: employee\n  };\n};\n\nexport const deselectEmployee = () => {\n  return {\n    type: \"DESELECT_EMPLOYEE\"\n  };\n};\n\nexport const editEmployee = (updatedEmployee, email) => async dispatch => {\n  db.collection(\"hrms-employees\")\n    .where(\"email\", \"==\", email)\n    .limit(1)\n    .get()\n    .then(res => {\n      res.docs[0].ref.update(updatedEmployee);\n      dispatch(deselectEmployee());\n    });\n};\n\nexport const insertSalaryLog = salaryLog => async (dispatch, getState) => {\n  await db\n    .collection(\"hrms-employees\")\n    .where(\"email\", \"==\", getState().selectedEmployee.email)\n    .get()\n    .then(res =>\n      res.docs[0].ref.collection(\"salary log\").add({\n        gross: salaryLog.gross,\n        taxes: salaryLog.taxes,\n        transportation: salaryLog.transportation,\n        notes: salaryLog.notes,\n        timestamp: salaryLog.timestamp,\n        month: salaryLog.month\n      })\n    );\n  dispatch(closeModal());\n};\n\nexport const uploadFile = (file, email) => {\n  var ref = storage.ref(`hrms/contracts/${email}`);\n  ref\n    .put(file)\n    .then(res => {})\n    .catch(err => console.log(err));\n};\nexport const getFileURL = email => {\n  var ref = storage.ref();\n  const doc = ref.child(`hrms/contracts/${email}`);\n  return doc.getDownloadURL();\n};\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n};\n\nexport const openModal = () => {\n  return {\n    type: \"OPEN_MODAL\"\n  };\n};\nconst parseSalaryLogs = docs => {\n  let logs = [];\n  docs.forEach(doc => {\n    logs.push(doc.data());\n  });\n  return logs;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../actions\";\n\nimport {\n  Button,\n  Classes,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading\n} from \"@blueprintjs/core\";\nclass Header extends React.Component {\n  renderProfileOrCalendarIcon = () => {\n    if (this.props.element === \"profile\")\n      return (\n        <Link to=\"/\" style={{ color: \"white\" }}>\n          <Button\n            className={Classes.MINIMAL}\n            icon=\"calendar\"\n            text=\"Calendar\"\n          ></Button>\n        </Link>\n      );\n    else if (this.props.isAdmin)\n      return (\n        <Link to=\"/admin\" style={{ color: \"white\" }}>\n          <Button className={Classes.MINIMAL} icon=\"cog\" text=\"Manage\"></Button>\n        </Link>\n      );\n    return (\n      <Link to=\"/profile\" style={{ color: \"white\" }}>\n        <Button\n          className={Classes.MINIMAL}\n          icon=\"user\"\n          text=\"My Profile\"\n        ></Button>\n      </Link>\n    );\n  };\n  logout = () => {\n    window.gapi.auth2\n      .getAuthInstance()\n      .signOut()\n      .then(data => this.props.logout());\n  };\n  render() {\n    if (this.props.isAdmin === undefined) return <div />;\n    return (\n      <Navbar style={{ backgroundColor: \"#69c481\" }}>\n        <NavbarGroup align=\"left\">\n          <NavbarHeading\n            style={{\n              fontSize: \"30px\",\n              fontFamily: \"Comic Sans MS, cursive, sans-serif\"\n            }}\n          >\n            HRMS\n          </NavbarHeading>\n          <NavbarDivider />\n        </NavbarGroup>\n        <NavbarGroup align=\"right\">\n          {this.renderProfileOrCalendarIcon()}\n\n          <Button\n            className={Classes.MINIMAL}\n            text=\"Sign Out\"\n            icon=\"log-out\"\n            onClick={this.logout}\n          />\n        </NavbarGroup>\n      </Navbar>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { isAdmin: state.employee.isAdmin };\n};\nexport default connect(mapStateToProps, { logout })(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\nimport { Dialog } from \"@blueprintjs/core\";\nimport { DateRangeInput } from \"@blueprintjs/datetime\";\nimport { closeModal, scheduleVacation } from \"../../actions\";\n\nclass Modal extends React.Component {\n  formatDate = date => {\n    return (\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n  };\n\n  getNumOfDays = (start, end) => {\n    const diffTime = Math.abs(end - start);\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n  };\n  onSubmit = formValues => {\n    let start = formValues.dates[0];\n    let end = formValues.dates[1];\n    let numOfDays = this.getNumOfDays(start, end);\n    const day = 60 * 60 * 24 * 1000;\n\n    if (this.props.remainingDays >= numOfDays) {\n      this.sendEvent(\n        this.props.name,\n        this.formatDate(start),\n        this.formatDate(new Date(end.getTime() + day))\n      ).then(\n        data => {\n          this.props.scheduleVacation(this.props.remainingDays - numOfDays);\n          this.props.closeModal();\n        },\n        err => console.log(err)\n      );\n    } else {\n      alert(\"You only have \" + this.props.remainingDays + \" days left.\");\n    }\n  };\n  sendEvent = (name, start, end) => {\n    var event = {\n      summary: \"Vacation ( \" + name + \" )\",\n      start: {\n        date: start\n      },\n      end: {\n        date: end\n      }\n    };\n    return window.gapi.client.calendar.events.insert({\n      calendarId: \"b2075atruvv2hai75ah9lcr5m0@group.calendar.google.com\",\n      resource: event\n    });\n  };\n  renderDateInput = formProps => {\n    return (\n      <div className=\"field\">\n        <DateRangeInput\n          formatDate={date => this.formatDate(date)}\n          parseDate={str => str}\n          allowSingleDayRange={true}\n          shortcuts={false}\n          {...formProps.input}\n        />\n      </div>\n    );\n  };\n  renderNumOfDays = () => {\n    if (this.props.vacationDate && this.props.vacationDate[1] !== null) {\n      return (\n        <div className=\"mt-1 col-4\">\n          {this.getNumOfDays(\n            this.props.vacationDate[0],\n            this.props.vacationDate[1]\n          )}{\" \"}\n          Days\n        </div>\n      );\n    }\n  };\n  render() {\n    return (\n      <Dialog\n        canOutsideClickClose={false}\n        canEscapeKeyClose={false}\n        isOpen={this.props.isOpen}\n        onClose={this.props.closeModal}\n        title=\"Schedule A Vacation\"\n      >\n        <div className=\"container mt-4 ml-3\">\n          <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n            <div className=\"row\">\n              <Field name=\"dates\" component={this.renderDateInput}></Field>\n              {this.renderNumOfDays()}\n            </div>\n\n            <button\n              className=\"btn btn-md row mt-2\"\n              type=\"submit\"\n              style={{ backgroundColor: \"#53c270\" }}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.isModalOpen,\n    name: state.employee.name,\n    remainingDays: state.employee.remainingVacationDays,\n    vacationDate: selector(state, \"dates\")\n  };\n};\nconst selector = formValueSelector(\"scheduleVacation\");\nexport default connect(mapStateToProps, { closeModal, scheduleVacation })(\n  reduxForm({\n    form: \"scheduleVacation\"\n  })(Modal)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../../actions\";\nimport Header from \"../Header\";\nimport \"./Calendar.css\";\nimport Modal from \"./Modal\";\n\nclass Calendar extends React.Component {\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n  renderScheduleEvent = () => {};\n  render() {\n    return (\n      <div>\n        <Header element=\"calendar\"></Header>\n        <Modal></Modal>\n        <div>\n          <iframe\n            key={this.props.remainingDays}\n            title=\"googleCalendar\"\n            src=\"https://calendar.google.com/calendar/embed?src=b2075atruvv2hai75ah9lcr5m0%40group.calendar.google.com\"\n            className=\"calendar\"\n            frameBorder=\"0\"\n            scrolling=\"no\"\n            onLoad={this.renderScheduleEvent}\n          ></iframe>\n          <button\n            className=\"btn ml-2\"\n            onClick={() => this.props.openModal()}\n            style={{ backgroundColor: \"#53c270\", color: \"#111\" }}\n            hidden={this.props.employee.isAdmin || !this.props.employee.name}\n          >\n            Schedule Vacation\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    remainingDays: state.employee.remainingVacationDays,\n    employee: state.employee\n  };\n};\nexport default connect(mapStateToProps, { openModal })(Calendar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { H4, H6 } from \"@blueprintjs/core\";\nimport { getFileURL } from \"../../actions\";\n\nclass Info extends React.Component {\n  state = { url: \"\" };\n  componentDidMount() {\n    getFileURL(this.props.employee.email)\n      .then(url => this.setState({ url }))\n      .catch(err => console.log(err));\n  }\n  formatDate = date => {\n    return (\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n  };\n  renderStartDate = () => {\n    if (this.props.employee.startDate)\n      return (\n        <H6>\n          {this.formatDate(\n            new Date(this.props.employee.startDate.seconds * 1000)\n          )}\n        </H6>\n      );\n    else return <H6>No Data</H6>;\n  };\n\n  renderEndDate = () => {\n    if (this.props.employee.endDate)\n      return (\n        <H6>\n          {this.formatDate(\n            new Date(this.props.employee.endDate.seconds * 1000)\n          )}\n        </H6>\n      );\n    else return <H6>No Data</H6>;\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid ml-5\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-5\">\n            <H4>Start Date: </H4>\n          </div>\n          <div className=\"col-3 mt-1\">{this.renderStartDate()}</div>\n        </div>\n        <div className=\"row no-gutters\">\n          <div className=\"col-5\">\n            <H4>End Date:</H4>\n          </div>\n          <div className=\"col-3 mt-1\">{this.renderEndDate()}</div>\n        </div>\n        <div className=\"row no-gutters\">\n          <div className=\"col-5\">\n            <H4>Salary:</H4>\n          </div>\n          <div className=\"col-3 mt-1\">\n            <H6>\n              {this.props.employee.salary === undefined\n                ? \"No Data\"\n                : this.props.employee.salary}\n            </H6>\n          </div>\n        </div>\n        <div className=\"row no-gutters\">\n          <div className=\"col-6\">\n            <H4>Remaining Vacation Days:</H4>\n          </div>\n          <div className=\"col-3 mt-1\">\n            <H6>\n              {this.props.employee.remainingVacationDays === undefined\n                ? \"No Data\"\n                : this.props.employee.remainingVacationDays}\n            </H6>\n          </div>\n        </div>\n        <div className=\"row no-gutters\">\n          <div className=\"col-6\">\n            <H4>Total Vacation Days:</H4>\n          </div>\n          <div className=\"col-3 mt-1\">\n            <H6>\n              {this.props.employee.totalVacationDays === undefined\n                ? \"No Data\"\n                : this.props.employee.totalVacationDays}\n            </H6>\n          </div>\n        </div>\n        <a\n          hidden={this.state.url === \"\"}\n          className=\"row\"\n          href={this.state.url ? this.state.url : \"\"}\n        >\n          Contract\n        </a>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { employee: state.employee };\n};\nexport default connect(mapStateToProps)(Info);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SalaryLog.css\";\nclass SalaryLog extends React.Component {\n  renderSalaryLog = () => {\n    if (this.props.logs.length === 0) return <h4>No Salary Logs</h4>;\n    else\n      return (\n        <table className=\"w-100\">\n          <thead>\n            <tr>\n              <th>Month</th>\n              <th>Gross</th>\n              <th>Taxes</th>\n              <th>Transportation</th>\n              <th>Net</th>\n              <th>Notes</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.logs.map(log => {\n              return (\n                <tr key={log.timestamp.seconds}>\n                  <td>{log.month}</td>\n                  <td>{log.gross}</td>\n                  <td>{log.taxes}</td>\n                  <td>{log.transportation}</td>\n                  <td>{log.gross - log.taxes + log.transportation}</td>\n                  <td>{log.notes}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n  };\n  render() {\n    return this.renderSalaryLog();\n  }\n}\nconst mapStateToProps = state => {\n  return { logs: state.salaryLogs };\n};\nexport default connect(mapStateToProps)(SalaryLog);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Tab, Tabs } from \"@blueprintjs/core\";\nimport { fetchSalaryLogs } from \"../../actions\";\nimport Header from \"../Header\";\nimport Info from \"./Info\";\nimport SalaryLog from \"./SalaryLog\";\n\nclass Profile extends React.Component {\n  state = { navbarTabId: \"profileInfo\" };\n  componentDidMount() {\n    this.props.fetchSalaryLogs();\n  }\n  handleTabChange = navbarTabId => this.setState({ navbarTabId });\n  render() {\n    return (\n      <div>\n        <Header element=\"profile\"></Header>\n        <div className=\"container-fluid\">\n          <div className=\"row mt-4\">\n            <div className=\"col-4\"></div>\n            <div className=\"col-4 text-center\">\n              <Icon className=\"mt-3\" icon=\"user\" iconSize={120} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col-4 text-center\">\n              <h1>{this.props.employee.name}</h1>\n              <h5 style={{ color: \"#2B95D6\" }}>{this.props.employee.title}</h5>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col-4 mt-5\">\n              <Tabs\n                id=\"profile\"\n                onChange={this.handleTabChange}\n                selectedTabId={this.state.navbarTabId}\n              >\n                <Tab id=\"profileInfo\" title=\"Info\" panel={<Info />} />\n                <Tab\n                  id=\"salaryLog\"\n                  title=\"Salary Log\"\n                  panel={<SalaryLog />}\n                  panelClassName=\"ember-panel\"\n                />\n                <Tabs.Expander />\n              </Tabs>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { employee: state.employee };\n};\nexport default connect(mapStateToProps, { fetchSalaryLogs })(Profile);\n","export default [\n  \"Talk is cheap. Show me the code.\",\n  \"Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.\",\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\n  \"Truth can only be found in one place: the code.\",\n  \"A language that doesn't affect the way you think about programming is not worth knowing.\",\n  \"Happiness should be a function without any parameters.\",\n  \"Delivering good software today is often better than perfect software tomorrow, so finish things and ship.\",\n  \"The best thing about a boolean is even if you are wrong, you are only off by a bit.\",\n  \"Before software can be reusable it first has to be usable.\",\n  \"It’s not a bug – it’s an undocumented feature.\",\n  \"Walking on water and developing software from a specification are easy if both are frozen.\",\n  \"In order to understand recursion, one must first understand recursion.\"\n];\n","import React from \"react\";\nimport { Spinner } from \"@blueprintjs/core\";\nimport { connect } from \"react-redux\";\nimport { login, logout, fetchEmployee } from \"../../actions\";\nimport quotes from \"../../Quotes\";\nimport \"./Login.css\";\n\nclass Login extends React.Component {\n  state = { quote: quotes[Math.floor(Math.random() * quotes.length)] };\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () =>\n      window.gapi.client\n        .init({\n          clientId:\n            \"978494847774-ipsp5454ms4qascu0848i92mj9412k8o.apps.googleusercontent.com\",\n          scope:\n            \"email https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events\",\n          discoveryDocs: [\n            \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\n          ],\n          apiKey: \"AIzaSyA4aO4Ga-yRkr1PHcB4wc4otZaR_XtbzkY\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        })\n    );\n  }\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      if (\n        this.auth.currentUser\n          .get()\n          .getBasicProfile()\n          .getEmail()\n          .split(\"@\")[1] === \"gmail.com\"\n      ) {\n        this.props.login(\n          this.auth.currentUser.get().getId(),\n          this.auth.currentUser\n            .get()\n            .getBasicProfile()\n            .getEmail(),\n          this.auth.currentUser\n            .get()\n            .getBasicProfile()\n            .getName()\n        );\n        this.props.fetchEmployee(this.auth.currentUser.get().getId());\n      } else {\n        this.auth.signOut();\n        alert(\"Unauthorized\");\n      }\n    } else this.props.logout();\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n  renderSpinner = () => {\n    if (this.props.isLoggedIn) {\n      return <Spinner intent=\"success\" size=\"70\" />;\n    } else {\n      if (window.gapi.auth2) {\n        return (\n          <button\n            className=\"btn\"\n            style={{\n              color: \"white\",\n              borderRadius: \"20px\",\n              backgroundColor: \"#69c481\"\n            }}\n            onClick={this.onSignInClick}\n          >\n            Login with google\n          </button>\n        );\n      } else return <Spinner intent=\"success\" size=\"70\" />;\n    }\n  };\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <div className=\"container col-4\" style={{ paddingTop: \"20%\" }}>\n          <div className=\"row mb-5\">\n            <div className=\"col-1\"></div>\n            <div className=\"col-4\">\n              <h1 className=\"bp3-heading title\" style={{ fontSize: \"90px\" }}>\n                HRMS\n              </h1>\n            </div>\n          </div>\n          {this.renderSpinner()}\n          <div\n            className=\"row mt-4 .bp3-ui-text text-center\"\n            style={{ fontSize: \"20px\" }}\n          >\n            <q className=\"col\">{this.state.quote}</q>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { isLoggedIn: state.uid !== \"\" };\n};\nexport default connect(mapStateToProps, { login, logout, fetchEmployee })(\n  Login\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Dialog, InputGroup } from \"@blueprintjs/core\";\nimport { DateInput } from \"@blueprintjs/datetime\";\nimport { closeModal, insertSalaryLog } from \"../../actions\";\n\nclass SalaryLogModal extends React.Component {\n  onSubmit = formValues => {\n    this.props.insertSalaryLog(formValues).then(() => this.props.reset());\n  };\n  formatDate = date => {\n    return (\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n  };\n  renderTextInput = formProps => {\n    return (\n      <label className=\"bp3-label\">\n        {formProps.label}\n        <InputGroup {...formProps.input} />\n      </label>\n    );\n  };\n  renderDateInput = formProps => {\n    return (\n      <label className=\"bp3-label\">\n        {formProps.label}\n        <DateInput\n          formatDate={date => this.formatDate(date)}\n          parseDate={str => str}\n          {...formProps.input}\n          popoverProps={{\n            onOpened: e => {\n              const el = document.querySelector('.DayPicker-Day[tabindex=\"0\"]');\n              el.addEventListener(\"blur\", e => {\n                e.stopImmediatePropagation();\n              });\n            }\n          }}\n        />\n      </label>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        canOutsideClickClose={false}\n        canEscapeKeyClose={false}\n        isOpen={this.props.isOpen}\n        onClose={this.props.closeModal}\n        title=\"Insert Salary Log\"\n      >\n        <div className=\"container mt-3\">\n          <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n            <Field\n              name=\"gross\"\n              component={this.renderTextInput}\n              label=\"Gross\"\n              parse={v => Number(v)}\n            ></Field>\n            <Field\n              name=\"transportation\"\n              component={this.renderTextInput}\n              label=\"Transportation\"\n              parse={v => Number(v)}\n            ></Field>\n            <Field\n              name=\"taxes\"\n              component={this.renderTextInput}\n              label=\"Taxes\"\n              parse={v => Number(v)}\n            ></Field>\n            <Field\n              name=\"notes\"\n              component={this.renderTextInput}\n              label=\"Notes\"\n            ></Field>\n            <Field\n              name=\"timestamp\"\n              component={this.renderDateInput}\n              label=\"Pay Date\"\n            ></Field>\n            <label className=\"bp3-label row\">\n              <span className=\"col-3 ml-1\">Month</span>\n              <Field name=\"month\" component=\"select\" className=\"col-3\">\n                <option></option>\n                <option value=\"January\">January</option>\n                <option value=\"February\">February</option>\n                <option value=\"March\">March</option>\n                <option value=\"April\">April</option>\n                <option value=\"May\">May</option>\n                <option value=\"June\">June</option>\n                <option value=\"July\">July</option>\n                <option value=\"August\">August</option>\n                <option value=\"September\">September</option>\n                <option value=\"October\">October</option>\n                <option value=\"November\">November</option>\n                <option value=\"December\">December</option>\n              </Field>\n            </label>\n            <button\n              className=\"btn\"\n              style={{ backgroundColor: \"#53c270\" }}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.isModalOpen,\n    initialValues: {\n      timestamp: new Date(Date.now())\n    }\n  };\n};\nexport default connect(mapStateToProps, { closeModal, insertSalaryLog })(\n  reduxForm({\n    form: \"salaryLog\"\n  })(SalaryLogModal)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  InputGroup,\n  Card,\n  Elevation,\n  Divider,\n  Colors,\n  Button,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { DateInput } from \"@blueprintjs/datetime\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  deselectEmployee,\n  editEmployee,\n  openModal,\n  uploadFile\n} from \"../../actions\";\nimport SalaryLogModal from \"./SalaryLogModal\";\n\nclass EmployeeEdit extends React.Component {\n  state = { contract: null };\n  onFileUploadChange = event => {\n    this.setState({ contract: event.target.files[0] });\n  };\n  onUploadButtonClick = () => {\n    uploadFile(this.state.contract, this.props.email);\n  };\n  onSubmit = formValues => {\n    this.props.editEmployee(formValues, this.props.email);\n  };\n  formatDate = date => {\n    return (\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\n    );\n  };\n  renderTextInput = formProps => {\n    return (\n      <div>\n        <label className=\"bp3-label\">\n          {formProps.label}\n          <InputGroup {...formProps.input} />\n        </label>\n        {this.renderError(formProps.meta)}\n      </div>\n    );\n  };\n  renderError({ error, touched }) {\n    if (touched && error)\n      return <span style={{ color: Colors.RED3 }}>{error}</span>;\n  }\n  renderDateInput = formProps => {\n    return (\n      <label className=\"bp3-label\">\n        {formProps.label}\n        <DateInput\n          formatDate={date => this.formatDate(date)}\n          parseDate={str => {\n            return str;\n          }}\n          maxDate={new Date(2025, 12, 31)}\n          {...formProps.input}\n          popoverProps={{\n            onOpened: e => {\n              const el = document.querySelector('.DayPicker-Day[tabindex=\"0\"]');\n              el.addEventListener(\"blur\", e => {\n                e.stopImmediatePropagation();\n              });\n            }\n          }}\n        />\n      </label>\n    );\n  };\n  renderUploadContract = () => {\n    return (\n      <div className=\"row mt-2\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-5\">\n          <FileInput\n            style={{ width: \"10vw\" }}\n            text=\"Choose a Contract...\"\n            onInputChange={this.onFileUploadChange}\n          />\n        </div>\n        <div className=\"col-2\">\n          <button\n            className=\"btn-sm\"\n            onClick={this.onUploadButtonClick}\n            style={{ border: \"1px solid gray\" }}\n          >\n            Upload\n          </button>\n        </div>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <Card className=\"col-6\" elevation={Elevation.TWO}>\n        <SalaryLogModal></SalaryLogModal>\n        <div className=\"row ml-2\">\n          <div className=\"col-5\">\n            <h5>{this.props.name}</h5>\n          </div>\n          <div className=\"col-5\">\n            <Button icon=\"dollar\" onClick={this.props.openModal}>\n              Insert Salary Log\n            </Button>\n          </div>\n        </div>\n        {this.renderUploadContract()}\n        <Divider className=\"mt-3\" />\n        <h5 className=\"mt-3\">Edit Employee</h5>\n        <form\n          className=\"mt-3\"\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n        >\n          <Field\n            name=\"name\"\n            component={this.renderTextInput}\n            label=\"Name\"\n          ></Field>\n          <Field\n            name=\"title\"\n            component={this.renderTextInput}\n            label=\"Title\"\n          ></Field>\n          <Field\n            name=\"salary\"\n            component={this.renderTextInput}\n            label=\"Salary\"\n            parse={v => Number(v)}\n          ></Field>\n          <Field\n            name=\"startDate\"\n            component={this.renderDateInput}\n            label=\"Start Date\"\n          ></Field>\n          <Field\n            name=\"endDate\"\n            component={this.renderDateInput}\n            label=\"End Date\"\n          ></Field>\n          <Field\n            name=\"totalVacationDays\"\n            component={this.renderTextInput}\n            label=\"Total Vacation Days\"\n            parse={v => Number(v)}\n          ></Field>\n          <Field\n            name=\"remainingVacationDays\"\n            component={this.renderTextInput}\n            label=\"Remaining Vacation Days\"\n            parse={v => Number(v)}\n          ></Field>\n          <button\n            className=\"btn\"\n            type=\"submit\"\n            style={{ backgroundColor: \"#53c270\", color: \"#111\" }}\n          >\n            Submit\n          </button>\n          <button\n            className=\"btn ml-2\"\n            onClick={this.props.deselectEmployee}\n            style={{ border: \"2px solid gray\" }}\n          >\n            Cancel\n          </button>\n        </form>\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    email: state.selectedEmployee.email,\n    name: state.selectedEmployee.name,\n    initialValues: {\n      title: state.selectedEmployee.title,\n      name: state.selectedEmployee.name,\n      salary: state.selectedEmployee.salary,\n      totalVacationDays: state.selectedEmployee.totalVacationDays,\n      remainingVacationDays: state.selectedEmployee.remainingVacationDays,\n      startDate: state.selectedEmployee.startDate\n        ? new Date(state.selectedEmployee.startDate.seconds * 1000)\n        : new Date(2000, 1, 1),\n      endDate: state.selectedEmployee.endDate\n        ? new Date(state.selectedEmployee.endDate.seconds * 1000)\n        : new Date(2000, 1, 1)\n    }\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deselectEmployee,\n  editEmployee,\n  openModal\n})(\n  reduxForm({\n    form: \"editEmployee\",\n    enableReinitialize: true\n  })(EmployeeEdit)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reset } from \"redux-form\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport { fetchAllEmployees, selectEmployee } from \"../../actions\";\nimport Header from \"../Header\";\nimport EmployeeEdit from \"./EmployeeEdit\";\nimport \"./Admin.css\";\n\nclass Admin extends React.Component {\n  state = { sideMenuWidth: \"0px\", mainMargin: \"0px\" };\n  componentDidMount() {\n    this.props.fetchAllEmployees();\n  }\n  openSideMenu = () => {\n    this.setState({ sideMenuWidth: \"250px\", mainMargin: \"250px\" });\n  };\n\n  closeSideMenu = () => {\n    this.setState({ sideMenuWidth: \"0px\", mainMargin: \"0px\" });\n  };\n  renderEmployeeEdit = () => {\n    if (this.props.selectedEmployee !== null)\n      return <EmployeeEdit></EmployeeEdit>;\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"sidenav\" style={{ width: this.state.sideMenuWidth }}>\n          <span className=\"closebtn\" onClick={this.closeSideMenu}>\n            x\n          </span>\n          {this.props.employees.map(employee => {\n            return (\n              <span\n                key={employee.email}\n                onClick={() => {\n                  reset(\"editEmployee\");\n                  this.props.selectEmployee(employee);\n                }}\n              >\n                {employee.name}\n              </span>\n            );\n          })}\n        </div>\n        <div className=\"main\" style={{ marginLeft: this.state.mainMargin }}>\n          <Header element=\"profile\"></Header>\n\n          <div className=\"container mt-2\">\n            <div className=\"row mt-2\">\n              <div className=\"col-3\"></div>\n              <Card className=\"col-4\" elevation={Elevation.TWO}>\n                <h3>\n                  <div>Dashboard</div>\n                </h3>\n                <p>Number of Employees: {this.props.employees.length}</p>\n                <Button onClick={this.openSideMenu}>Show Employees</Button>\n              </Card>\n            </div>\n\n            <div className=\"row mt-3\">\n              <div className=\"col-2\"></div>\n              {this.renderEmployeeEdit()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    employees: state.employees,\n    selectedEmployee: state.selectedEmployee\n  };\n};\nexport default connect(mapStateToProps, { fetchAllEmployees, selectEmployee })(\n  Admin\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Calendar from \"./calendar/Calendar\";\nimport history from \"../history\";\nimport { login, logout } from \"../actions\";\nimport Profile from \"./profile/Profile\";\nimport Login from \"./login/Login\";\nimport Admin from \"./admin/Admin\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    if (props.uid === \"\") {\n      history.push(\"login\");\n    }\n  }\n\n  renderProfileRoute = () => {\n    if (this.props.isAdmin)\n      return <Route path=\"/admin\" exact component={Admin}></Route>;\n    else return <Route path=\"/profile\" exact component={Profile}></Route>;\n  };\n  render() {\n    return (\n      <div\n        className=\"container-fluid\"\n        style={{ height: \"100vh\", backgroundColor: \"#eeeeee\" }}\n      >\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/login\" exact component={Login}></Route>\n            <Route path=\"/\" exact component={Calendar}></Route>\n            {this.renderProfileRoute()}\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { uid: state.uid, isAdmin: state.employee.isAdmin };\n};\nexport default connect(mapStateToProps, { login, logout })(App);\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport authReducer from \"./authReducer\";\nimport employeeReducer from \"./employeeReducer\";\nimport modalReducer from \"./modalReducer\";\nimport salaryLogsReducer from \"./salaryLogsReducer\";\nimport employeesReducer from \"./employeesReducer\";\nimport selectEmployeeReducer from \"./selectEmployeeReducer\";\n\nexport default combineReducers({\n  uid: authReducer,\n  employee: employeeReducer,\n  employees: employeesReducer,\n  selectedEmployee: selectEmployeeReducer,\n  isModalOpen: modalReducer,\n  salaryLogs: salaryLogsReducer,\n  form: formReducer\n});\n","export default (state = \"\", action) => {\n  switch (action.type) {\n    case \"LOGIN\": {\n      return action.payload;\n    }\n    case \"LOGOUT\":\n      return \"\";\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_EMPLOYEE\": {\n      return { ...action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL_EMPLOYEES\": {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n","export default (state = null, action) => {\n  switch (action.type) {\n    case \"SELECT_EMPLOYEE\": {\n      return action.payload;\n    }\n    case \"DESELECT_EMPLOYEE\": {\n      return null;\n    }\n    default:\n      return state;\n  }\n};\n","export default (state = false, action) => {\n  switch (action.type) {\n    case \"CLOSE_MODAL\": {\n      return false;\n    }\n    case \"OPEN_MODAL\": {\n      return true;\n    }\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_SALARY_LOGS\": {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n//blueprint files\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"normalize.css/normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDom.render(\n  <Provider store={createStore(reducers, applyMiddleware(reduxThunk))}>\n    <App></App>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}